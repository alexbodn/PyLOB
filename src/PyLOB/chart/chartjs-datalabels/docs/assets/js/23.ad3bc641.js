(window.webpackJsonp=window.webpackJsonp||[]).push([[23],{327:function(n,t,a){"use strict";a.r(t);var o=a(3),r=Object(o.a)({},(function(){var n=this.$createElement,t=this._self._c||n;return t("ContentSlotsDistributor",{attrs:{"slot-key":this.$parent.slotKey}},[t("h1",{attrs:{id:"doughnut"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#doughnut"}},[this._v("#")]),this._v(" Doughnut")]),this._v(" "),t("chart-editor",{attrs:{code:"// <block:setup:2>\nvar DATA_COUNT = 10;\nvar labels = [];\n\nUtils.srand(4);\n\nfor (var i = 0; i < DATA_COUNT; ++i) {\n  labels.push('' + i);\n}\n// </block:setup>\n\nvar config = /* <block:config:0> */ {\n  type: 'doughnut',\n  data: {\n    labels: labels,\n    datasets: [{\n      backgroundColor: Utils.colors({\n        color: Utils.color(0),\n        count: DATA_COUNT\n      }),\n      data: Utils.numbers({\n        count: DATA_COUNT,\n        min: 0,\n        max: 100\n      }),\n      datalabels: {\n        anchor: 'end'\n      }\n    }, {\n      backgroundColor: Utils.colors({\n        color: Utils.color(1),\n        count: DATA_COUNT\n      }),\n      data: Utils.numbers({\n        count: DATA_COUNT,\n        min: 0,\n        max: 100\n      }),\n      datalabels: {\n        anchor: 'center',\n        backgroundColor: null,\n        borderWidth: 0\n      }\n    }, {\n      backgroundColor: Utils.colors({\n        color: Utils.color(2),\n        count: DATA_COUNT\n      }),\n      data: Utils.numbers({\n        count: DATA_COUNT,\n        min: 0,\n        max: 100\n      }),\n      datalabels: {\n        anchor: 'start'\n      }\n    }]\n  },\n  options: {\n    plugins: {\n      datalabels: {\n        backgroundColor: function(context) {\n          return context.dataset.backgroundColor;\n        },\n        borderColor: 'white',\n        borderRadius: 25,\n        borderWidth: 2,\n        color: 'white',\n        display: function(context) {\n          var dataset = context.dataset;\n          var count = dataset.data.length;\n          var value = dataset.data[context.dataIndex];\n          return value > count * 1.5;\n        },\n        font: {\n          weight: 'bold'\n        },\n        padding: 6,\n        formatter: Math.round\n      }\n    },\n\n    // Core options\n    aspectRatio: 4 / 3,\n    cutoutPercentage: 32,\n    layout: {\n      padding: 32\n    },\n    elements: {\n      line: {\n        fill: false\n      },\n      point: {\n        hoverRadius: 7,\n        radius: 5\n      }\n    },\n  }\n} /* </block:config> */;\n\nvar actions = [\n  {\n    name: 'Randomize',\n    handler: function(chart) {\n      chart.data.datasets.forEach(function(dataset, i) {\n        dataset.backgroundColor = dataset.data.map(function(value) {\n          return Utils.color();\n        });\n        dataset.data = dataset.data.map(function(value) {\n          return Utils.rand(0, 100);\n        });\n      });\n\n      chart.update();\n    }\n  },\n  {\n    name: 'Add data',\n    handler: function(chart) {\n      chart.data.labels.push(chart.data.labels.length);\n      chart.data.datasets.forEach(function(dataset, i) {\n        dataset.backgroundColor.push(Utils.color());\n        dataset.data.push(Utils.rand(0, 100));\n      });\n\n      chart.update();\n    }\n  },\n  {\n    name: 'Remove data',\n    handler: function(chart) {\n      chart.data.labels.shift();\n      chart.data.datasets.forEach(function(dataset, i) {\n        dataset.backgroundColor.shift();\n        dataset.data.shift();\n      });\n\n      chart.update();\n    }\n  }\n];\n\nmodule.exports = {\n  actions: actions,\n  config: config,\n};\n"}})],1)}),[],!1,null,null,null);t.default=r.exports}}]);