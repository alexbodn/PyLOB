(window.webpackJsonp=window.webpackJsonp||[]).push([[20],{325:function(n,t,a){"use strict";a.r(t);var e=a(3),o=Object(e.a)({},(function(){var n=this,t=n.$createElement,a=n._self._c||t;return a("ContentSlotsDistributor",{attrs:{"slot-key":n.$parent.slotKey}},[a("h1",{attrs:{id:"multiple-labels"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#multiple-labels"}},[n._v("#")]),n._v(" Multiple Labels")]),n._v(" "),a("p",[n._v("Use "),a("RouterLink",{attrs:{to:"/guide/labels.html#multiple-labels"}},[n._v("multiple labels configuration")]),n._v(" to display 3 labels\nper data, one for the "),a("code",[n._v("index")]),n._v(", one for the "),a("code",[n._v("label")]),n._v(" and one for the "),a("code",[n._v("value")]),n._v(". Move the mouse over\nthe chart to display label ids.")],1),n._v(" "),a("chart-editor",{attrs:{code:"// <block:setup:2>\nvar DATA_COUNT = 4;\nvar labels = [\n  'Earth',\n  'Mars',\n  'Saturn',\n  'Jupiter'\n];\n\nUtils.srand(4);\n// </block:setup>\n\nvar config = /* <block:config:0> */ {\n  type: 'doughnut',\n  data: {\n    labels: labels,\n    datasets: [{\n      backgroundColor: Utils.colors({\n        color: Utils.color(1),\n        mode: 'darken'\n      }),\n      hoverBorderColor: 'white',\n      data: Utils.numbers({\n        count: DATA_COUNT,\n        min: 0,\n        max: 100\n      }),\n      datalabels: {\n        labels: {\n          index: {\n            align: 'end',\n            anchor: 'end',\n            color: function(ctx) {\n              return ctx.dataset.backgroundColor;\n            },\n            font: {size: 18},\n            formatter: function(value, ctx) {\n              return ctx.active\n                ? 'index'\n                : '#' + (ctx.dataIndex + 1);\n            },\n            offset: 8,\n            opacity: function(ctx) {\n              return ctx.active ? 1 : 0.5;\n            }\n          },\n          name: {\n            align: 'top',\n            font: {size: 16},\n            formatter: function(value, ctx) {\n              return ctx.active\n                ? 'name'\n                : ctx.chart.data.labels[ctx.dataIndex];\n            }\n          },\n          value: {\n            align: 'bottom',\n            backgroundColor: function(ctx) {\n              var value = ctx.dataset.data[ctx.dataIndex];\n              return value > 50 ? 'white' : null;\n            },\n            borderColor: 'white',\n            borderWidth: 2,\n            borderRadius: 4,\n            color: function(ctx) {\n              var value = ctx.dataset.data[ctx.dataIndex];\n              return value > 50\n                ? ctx.dataset.backgroundColor\n                : 'white';\n            },\n            formatter: function(value, ctx) {\n              return ctx.active\n                ? 'value'\n                : Math.round(value * 1000) / 1000;\n            },\n            padding: 4\n          }\n        }\n      }\n    }]\n  },\n  options: {\n    plugins: {\n      datalabels: {\n        color: 'white',\n        display: function(ctx) {\n          return ctx.dataset.data[ctx.dataIndex] > 10;\n        },\n        font: {\n          weight: 'bold',\n        },\n        offset: 0,\n        padding: 0\n      }\n    },\n\n    // Core options\n    aspectRatio: 3 / 2,\n    cutoutPercentage: 8,\n    layout: {\n      padding: 16\n    },\n    elements: {\n      line: {\n        fill: false,\n        tension: 0.4\n      },\n      point: {\n        hoverRadius: 7,\n        radius: 5\n      }\n    },\n  }\n} /* </block:config> */;\n\nvar actions = [\n  {\n    name: 'Randomize',\n    handler: function(chart) {\n      chart.data.datasets.forEach(function(dataset, i) {\n        dataset.backgroundColor = Utils.colors({\n          color: Utils.color(),\n          mode: 'darken'\n        });\n        dataset.data = dataset.data.map(function(value) {\n          return Utils.rand(0, 100);\n        });\n      });\n      chart.update();\n    }\n  }\n];\n\nmodule.exports = {\n  actions: actions,\n  config: config,\n};\n"}})],1)}),[],!1,null,null,null);t.default=o.exports}}]);